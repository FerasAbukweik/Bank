// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication6;

#nullable disable

namespace WebApplication6.Migrations
{
    [DbContext(typeof(DBcontext))]
    [Migration("20250914215659_converted_from_minorMahor_to_database_for_each_info___Add_amount_to_transactionModel___Add_send_Receive_to_transactionTypes")]
    partial class converted_from_minorMahor_to_database_for_each_info___Add_amount_to_transactionModel___Add_send_Receive_to_transactionTypes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication6.Models.Account", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long?>("accountTypes_id")
                        .HasColumnType("bigint");

                    b.Property<long>("balance")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<long?>("user_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("accountTypes_id");

                    b.HasIndex("user_id");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("WebApplication6.Models.AccountTypes", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("accountInfo");

                    b.HasData(
                        new
                        {
                            id = 1L,
                            type = "Savings"
                        },
                        new
                        {
                            id = 2L,
                            type = "Current_Checking"
                        },
                        new
                        {
                            id = 3L,
                            type = "Fixed_Deposit"
                        },
                        new
                        {
                            id = 4L,
                            type = "Recurring_Deposit"
                        },
                        new
                        {
                            id = 5L,
                            type = "NRI_Accounts"
                        });
                });

            modelBuilder.Entity("WebApplication6.Models.BankTransaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("account_id")
                        .HasColumnType("bigint");

                    b.Property<long>("amount")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<long?>("transactionInfo_id__status")
                        .HasColumnType("bigint");

                    b.Property<long?>("transactionInfo_id__type")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("account_id");

                    b.HasIndex("transactionInfo_id__status");

                    b.HasIndex("transactionInfo_id__type");

                    b.ToTable("transactions");
                });

            modelBuilder.Entity("WebApplication6.Models.Transfer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<long>("amount")
                        .HasColumnType("bigint");

                    b.Property<long?>("from_id")
                        .HasColumnType("bigint");

                    b.Property<long?>("to_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("from_id");

                    b.HasIndex("to_id");

                    b.ToTable("transfers");
                });

            modelBuilder.Entity("WebApplication6.Models.User", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hashed_password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("WebApplication6.Models.transactionStatus", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("transactionStatuses");

                    b.HasData(
                        new
                        {
                            id = 1L,
                            status = "Pending"
                        },
                        new
                        {
                            id = 2L,
                            status = "Completed"
                        },
                        new
                        {
                            id = 3L,
                            status = "Failed"
                        },
                        new
                        {
                            id = 4L,
                            status = "Canceled"
                        });
                });

            modelBuilder.Entity("WebApplication6.Models.transactionTypes", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("transactionInfo");

                    b.HasData(
                        new
                        {
                            id = 1L,
                            type = "Deposit"
                        },
                        new
                        {
                            id = 2L,
                            type = "Withdrawal"
                        },
                        new
                        {
                            id = 3L,
                            type = "Send"
                        },
                        new
                        {
                            id = 4L,
                            type = "Receive"
                        });
                });

            modelBuilder.Entity("WebApplication6.Models.Account", b =>
                {
                    b.HasOne("WebApplication6.Models.AccountTypes", "accountTypes")
                        .WithMany()
                        .HasForeignKey("accountTypes_id");

                    b.HasOne("WebApplication6.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("user_id");

                    b.Navigation("accountTypes");

                    b.Navigation("user");
                });

            modelBuilder.Entity("WebApplication6.Models.BankTransaction", b =>
                {
                    b.HasOne("WebApplication6.Models.Account", "account")
                        .WithMany()
                        .HasForeignKey("account_id");

                    b.HasOne("WebApplication6.Models.transactionTypes", "transactionInfo__status")
                        .WithMany()
                        .HasForeignKey("transactionInfo_id__status");

                    b.HasOne("WebApplication6.Models.transactionTypes", "transactionInfo__type")
                        .WithMany()
                        .HasForeignKey("transactionInfo_id__type");

                    b.Navigation("account");

                    b.Navigation("transactionInfo__status");

                    b.Navigation("transactionInfo__type");
                });

            modelBuilder.Entity("WebApplication6.Models.Transfer", b =>
                {
                    b.HasOne("WebApplication6.Models.BankTransaction", "from_account")
                        .WithMany()
                        .HasForeignKey("from_id");

                    b.HasOne("WebApplication6.Models.BankTransaction", "to_account")
                        .WithMany()
                        .HasForeignKey("to_id");

                    b.Navigation("from_account");

                    b.Navigation("to_account");
                });
#pragma warning restore 612, 618
        }
    }
}
