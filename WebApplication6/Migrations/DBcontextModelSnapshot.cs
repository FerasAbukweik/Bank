// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication6;

#nullable disable

namespace WebApplication6.Migrations
{
    [DbContext(typeof(DBcontext))]
    partial class DBcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication6.Models.Account", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long?>("accountType_id")
                        .HasColumnType("bigint");

                    b.Property<long>("balance")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("user_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("accountType_id");

                    b.HasIndex("user_id");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("WebApplication6.Models.AccountType", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("accountTypes");

                    b.HasData(
                        new
                        {
                            id = 1L,
                            type = "Savings"
                        },
                        new
                        {
                            id = 2L,
                            type = "Current/Checking"
                        },
                        new
                        {
                            id = 3L,
                            type = "Fixed/Deposit"
                        },
                        new
                        {
                            id = 4L,
                            type = "Recurring/Deposit"
                        },
                        new
                        {
                            id = 5L,
                            type = "NRI/Accounts"
                        });
                });

            modelBuilder.Entity("WebApplication6.Models.BankRole", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<int>("role")
                        .HasColumnType("int");

                    b.Property<string>("roleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("bankRoles");

                    b.HasData(
                        new
                        {
                            id = 1L,
                            role = 32703,
                            roleName = "Client"
                        },
                        new
                        {
                            id = 2L,
                            role = -1,
                            roleName = "Admin"
                        });
                });

            modelBuilder.Entity("WebApplication6.Models.Transfer", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.Property<long>("amount")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("fromAccount_id")
                        .HasColumnType("bigint");

                    b.Property<long?>("fromUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("toAccount_id")
                        .HasColumnType("bigint");

                    b.Property<long?>("toUserId")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("fromAccount_id");

                    b.HasIndex("fromUserId");

                    b.HasIndex("toAccount_id");

                    b.HasIndex("toUserId");

                    b.ToTable("transfers");
                });

            modelBuilder.Entity("WebApplication6.Models.User", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long?>("BankRole_id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hashedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("BankRole_id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            id = 1L,
                            BankRole_id = 2L,
                            createdAt = new DateTime(2025, 9, 16, 13, 12, 39, 713, DateTimeKind.Local).AddTicks(6689),
                            email = "admin@gmail.com",
                            hashedPassword = "$2a$11$g3QSh3R50Hq2d6uzp1GoAeBtQeCXDNWJlKDbqv0kYj7IZ1zEIBF3q",
                            phone = "",
                            userName = "Admin"
                        });
                });

            modelBuilder.Entity("WebApplication6.Models.Account", b =>
                {
                    b.HasOne("WebApplication6.Models.AccountType", "accountType")
                        .WithMany()
                        .HasForeignKey("accountType_id");

                    b.HasOne("WebApplication6.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("user_id");

                    b.Navigation("accountType");

                    b.Navigation("user");
                });

            modelBuilder.Entity("WebApplication6.Models.Transfer", b =>
                {
                    b.HasOne("WebApplication6.Models.Account", "fromAccount")
                        .WithMany()
                        .HasForeignKey("fromAccount_id");

                    b.HasOne("WebApplication6.Models.User", "fromUser")
                        .WithMany()
                        .HasForeignKey("fromUserId");

                    b.HasOne("WebApplication6.Models.Account", "toAccount")
                        .WithMany()
                        .HasForeignKey("toAccount_id");

                    b.HasOne("WebApplication6.Models.User", "toUser")
                        .WithMany()
                        .HasForeignKey("toUserId");

                    b.Navigation("fromAccount");

                    b.Navigation("fromUser");

                    b.Navigation("toAccount");

                    b.Navigation("toUser");
                });

            modelBuilder.Entity("WebApplication6.Models.User", b =>
                {
                    b.HasOne("WebApplication6.Models.BankRole", "bankRole")
                        .WithMany()
                        .HasForeignKey("BankRole_id");

                    b.Navigation("bankRole");
                });
#pragma warning restore 612, 618
        }
    }
}
