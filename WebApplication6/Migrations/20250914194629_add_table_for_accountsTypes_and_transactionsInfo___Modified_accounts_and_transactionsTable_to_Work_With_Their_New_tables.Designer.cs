// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication6;

#nullable disable

namespace WebApplication6.Migrations
{
    [DbContext(typeof(DBcontext))]
    [Migration("20250914194629_add_table_for_accountsTypes_and_transactionsInfo___Modified_accounts_and_transactionsTable_to_Work_With_Their_New_tables")]
    partial class add_table_for_accountsTypes_and_transactionsInfo___Modified_accounts_and_transactionsTable_to_Work_With_Their_New_tables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication6.Models.Account", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long>("accountInfo_id__type")
                        .HasColumnType("bigint");

                    b.Property<long>("balance")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<long?>("user_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("accountInfo_id__type");

                    b.HasIndex("user_id");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("WebApplication6.Models.AccountInfo", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("info")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("majorCode")
                        .HasColumnType("int");

                    b.Property<int>("minorCode")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("accountInfo");

                    b.HasData(
                        new
                        {
                            id = 1L,
                            info = "Savings",
                            majorCode = 1,
                            minorCode = 1
                        },
                        new
                        {
                            id = 2L,
                            info = "Current_Checking",
                            majorCode = 1,
                            minorCode = 2
                        },
                        new
                        {
                            id = 3L,
                            info = "Fixed_Deposit",
                            majorCode = 1,
                            minorCode = 3
                        },
                        new
                        {
                            id = 4L,
                            info = "Recurring_Deposit",
                            majorCode = 1,
                            minorCode = 4
                        },
                        new
                        {
                            id = 5L,
                            info = "NRI_Accounts",
                            majorCode = 1,
                            minorCode = 5
                        });
                });

            modelBuilder.Entity("WebApplication6.Models.Transaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("account_id")
                        .HasColumnType("bigint");

                    b.Property<long>("amount")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<long?>("transactionInfo_id__status")
                        .HasColumnType("bigint");

                    b.Property<long?>("transactionInfo_id__type")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("account_id");

                    b.HasIndex("transactionInfo_id__status");

                    b.HasIndex("transactionInfo_id__type");

                    b.ToTable("transactions");
                });

            modelBuilder.Entity("WebApplication6.Models.TransactionInfo", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("info")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("majorCode")
                        .HasColumnType("int");

                    b.Property<int>("minorCode")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("transactionInfo");

                    b.HasData(
                        new
                        {
                            id = 1L,
                            info = "Pending",
                            majorCode = 1,
                            minorCode = 1
                        },
                        new
                        {
                            id = 2L,
                            info = "Completed",
                            majorCode = 1,
                            minorCode = 2
                        },
                        new
                        {
                            id = 3L,
                            info = "Failed",
                            majorCode = 1,
                            minorCode = 3
                        },
                        new
                        {
                            id = 4L,
                            info = "Canceled",
                            majorCode = 1,
                            minorCode = 4
                        },
                        new
                        {
                            id = 5L,
                            info = "Deposit",
                            majorCode = 2,
                            minorCode = 1
                        },
                        new
                        {
                            id = 6L,
                            info = "Withdrawal",
                            majorCode = 2,
                            minorCode = 2
                        });
                });

            modelBuilder.Entity("WebApplication6.Models.Transfer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<long?>("from_id")
                        .HasColumnType("bigint");

                    b.Property<long?>("to_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("from_id");

                    b.HasIndex("to_id");

                    b.ToTable("transfers");
                });

            modelBuilder.Entity("WebApplication6.Models.User", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hashed_password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("WebApplication6.Models.Account", b =>
                {
                    b.HasOne("WebApplication6.Models.AccountInfo", "accountInfo__type")
                        .WithMany()
                        .HasForeignKey("accountInfo_id__type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication6.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("user_id");

                    b.Navigation("accountInfo__type");

                    b.Navigation("user");
                });

            modelBuilder.Entity("WebApplication6.Models.Transaction", b =>
                {
                    b.HasOne("WebApplication6.Models.Account", "account")
                        .WithMany()
                        .HasForeignKey("account_id");

                    b.HasOne("WebApplication6.Models.TransactionInfo", "transactionInfo__status")
                        .WithMany()
                        .HasForeignKey("transactionInfo_id__status");

                    b.HasOne("WebApplication6.Models.TransactionInfo", "transactionInfo__type")
                        .WithMany()
                        .HasForeignKey("transactionInfo_id__type");

                    b.Navigation("account");

                    b.Navigation("transactionInfo__status");

                    b.Navigation("transactionInfo__type");
                });

            modelBuilder.Entity("WebApplication6.Models.Transfer", b =>
                {
                    b.HasOne("WebApplication6.Models.Transaction", "from_account")
                        .WithMany()
                        .HasForeignKey("from_id");

                    b.HasOne("WebApplication6.Models.Transaction", "to_account")
                        .WithMany()
                        .HasForeignKey("to_id");

                    b.Navigation("from_account");

                    b.Navigation("to_account");
                });
#pragma warning restore 612, 618
        }
    }
}
