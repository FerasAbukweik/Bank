// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication6;

#nullable disable

namespace WebApplication6.Migrations
{
    [DbContext(typeof(DBcontext))]
    [Migration("20250914222734_start-every-thing-starts-with-transaction-with-bank--bacause-asp.net-already-uses-transaction")]
    partial class starteverythingstartswithtransactionwithbankbacauseaspnetalreadyusestransaction
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication6.Models.Account", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long?>("accountType_id")
                        .HasColumnType("bigint");

                    b.Property<long>("balance")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<long?>("user_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("accountType_id");

                    b.HasIndex("user_id");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("WebApplication6.Models.AccountType", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("accountInfo");

                    b.HasData(
                        new
                        {
                            id = 1L,
                            type = "Savings"
                        },
                        new
                        {
                            id = 2L,
                            type = "Current_Checking"
                        },
                        new
                        {
                            id = 3L,
                            type = "Fixed_Deposit"
                        },
                        new
                        {
                            id = 4L,
                            type = "Recurring_Deposit"
                        },
                        new
                        {
                            id = 5L,
                            type = "NRI_Accounts"
                        });
                });

            modelBuilder.Entity("WebApplication6.Models.BankTransaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("account_id")
                        .HasColumnType("bigint");

                    b.Property<long>("amount")
                        .HasColumnType("bigint");

                    b.Property<long?>("bankTransactionStatus_id")
                        .HasColumnType("bigint");

                    b.Property<long?>("bankTransactionType_id")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("account_id");

                    b.HasIndex("bankTransactionStatus_id");

                    b.HasIndex("bankTransactionType_id");

                    b.ToTable("bankTransactions");
                });

            modelBuilder.Entity("WebApplication6.Models.BankTransactionStatus", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("bankTransactionStatuses");

                    b.HasData(
                        new
                        {
                            id = 1L,
                            status = "Pending"
                        },
                        new
                        {
                            id = 2L,
                            status = "Completed"
                        },
                        new
                        {
                            id = 3L,
                            status = "Failed"
                        },
                        new
                        {
                            id = 4L,
                            status = "Canceled"
                        });
                });

            modelBuilder.Entity("WebApplication6.Models.BankTransactionType", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("bankTransactionInfo");

                    b.HasData(
                        new
                        {
                            id = 1L,
                            type = "Deposit"
                        },
                        new
                        {
                            id = 2L,
                            type = "Withdrawal"
                        },
                        new
                        {
                            id = 3L,
                            type = "Send"
                        },
                        new
                        {
                            id = 4L,
                            type = "Receive"
                        });
                });

            modelBuilder.Entity("WebApplication6.Models.Transfer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<long>("amount")
                        .HasColumnType("bigint");

                    b.Property<long?>("from_id")
                        .HasColumnType("bigint");

                    b.Property<long?>("to_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("from_id");

                    b.HasIndex("to_id");

                    b.ToTable("transfers");
                });

            modelBuilder.Entity("WebApplication6.Models.User", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hashed_password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("WebApplication6.Models.Account", b =>
                {
                    b.HasOne("WebApplication6.Models.AccountType", "accountType")
                        .WithMany()
                        .HasForeignKey("accountType_id");

                    b.HasOne("WebApplication6.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("user_id");

                    b.Navigation("accountType");

                    b.Navigation("user");
                });

            modelBuilder.Entity("WebApplication6.Models.BankTransaction", b =>
                {
                    b.HasOne("WebApplication6.Models.Account", "account")
                        .WithMany()
                        .HasForeignKey("account_id");

                    b.HasOne("WebApplication6.Models.BankTransactionStatus", "bankTransactionStatus")
                        .WithMany()
                        .HasForeignKey("bankTransactionStatus_id");

                    b.HasOne("WebApplication6.Models.BankTransactionType", "bankTransactionType")
                        .WithMany()
                        .HasForeignKey("bankTransactionType_id");

                    b.Navigation("account");

                    b.Navigation("bankTransactionStatus");

                    b.Navigation("bankTransactionType");
                });

            modelBuilder.Entity("WebApplication6.Models.Transfer", b =>
                {
                    b.HasOne("WebApplication6.Models.BankTransaction", "from_account")
                        .WithMany()
                        .HasForeignKey("from_id");

                    b.HasOne("WebApplication6.Models.BankTransaction", "to_account")
                        .WithMany()
                        .HasForeignKey("to_id");

                    b.Navigation("from_account");

                    b.Navigation("to_account");
                });
#pragma warning restore 612, 618
        }
    }
}
